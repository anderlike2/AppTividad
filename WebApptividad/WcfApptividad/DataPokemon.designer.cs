#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WcfApptividad
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="AppTividad")]
	public partial class DataPokemonDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertPOKEMONS_DATA(POKEMONS_DATA instance);
    partial void UpdatePOKEMONS_DATA(POKEMONS_DATA instance);
    partial void DeletePOKEMONS_DATA(POKEMONS_DATA instance);
    #endregion
		
		public DataPokemonDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["AppTividadConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataPokemonDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataPokemonDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataPokemonDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataPokemonDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<POKEMONS_DATA> POKEMONS_DATAs
		{
			get
			{
				return this.GetTable<POKEMONS_DATA>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CREATEPOKEMONDATA")]
		public int CREATEPOKEMONDATA([global::System.Data.Linq.Mapping.ParameterAttribute(Name="XmlData", DbType="VarChar(500)")] string xmlData)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), xmlData);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GETPOKEMONDATABYID")]
		public ISingleResult<GETPOKEMONDATABYIDResult> GETPOKEMONDATABYID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="Int")] System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((ISingleResult<GETPOKEMONDATABYIDResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.POKEMONS_DATA")]
	public partial class POKEMONS_DATA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _ID;
		
		private string _XMLDATA;
		
		private System.DateTime _REGISTERDATE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(decimal value);
    partial void OnIDChanged();
    partial void OnXMLDATAChanging(string value);
    partial void OnXMLDATAChanged();
    partial void OnREGISTERDATEChanging(System.DateTime value);
    partial void OnREGISTERDATEChanged();
    #endregion
		
		public POKEMONS_DATA()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XMLDATA", DbType="VarChar(5000) NOT NULL", CanBeNull=false)]
		public string XMLDATA
		{
			get
			{
				return this._XMLDATA;
			}
			set
			{
				if ((this._XMLDATA != value))
				{
					this.OnXMLDATAChanging(value);
					this.SendPropertyChanging();
					this._XMLDATA = value;
					this.SendPropertyChanged("XMLDATA");
					this.OnXMLDATAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_REGISTERDATE", DbType="DateTime NOT NULL")]
		public System.DateTime REGISTERDATE
		{
			get
			{
				return this._REGISTERDATE;
			}
			set
			{
				if ((this._REGISTERDATE != value))
				{
					this.OnREGISTERDATEChanging(value);
					this.SendPropertyChanging();
					this._REGISTERDATE = value;
					this.SendPropertyChanged("REGISTERDATE");
					this.OnREGISTERDATEChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class GETPOKEMONDATABYIDResult
	{
		
		private string _XMLDATA;
		
		private System.DateTime _REGISTERDATE;
		
		public GETPOKEMONDATABYIDResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XMLDATA", DbType="VarChar(5000) NOT NULL", CanBeNull=false)]
		public string XMLDATA
		{
			get
			{
				return this._XMLDATA;
			}
			set
			{
				if ((this._XMLDATA != value))
				{
					this._XMLDATA = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_REGISTERDATE", DbType="DateTime NOT NULL")]
		public System.DateTime REGISTERDATE
		{
			get
			{
				return this._REGISTERDATE;
			}
			set
			{
				if ((this._REGISTERDATE != value))
				{
					this._REGISTERDATE = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
